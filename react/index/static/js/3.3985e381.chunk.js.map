{"version":3,"file":"static/js/3.3985e381.chunk.js","mappings":"ugBAMO,SAASA,IAAuD,IACjEC,EADqBC,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAASH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,aAmBhDI,EAAa,CACjB,GAZAN,EALGC,EAII,WAAWM,KAAKN,EAASO,WAAWC,QACpC,IAAIC,KAAgB,IAAXT,GAGW,kBAAbA,GAAyB,QAAQM,KAAKN,EAASQ,QACtD,IAAIC,KAAKC,OAAOV,IAKhB,IAAIS,KAAyB,kBAAbT,EAAwBA,EAASW,QAAQ,KAAM,KAAOX,GAbtE,IAAIS,MAgBDG,cAAcL,WAExB,GAAMR,EAAKc,WAAa,GAAGN,WAAWO,SAAS,EAAG,KAElD,EAAKf,EAAKgB,UAAUR,WAAWO,SAAS,EAAG,KAE3C,EAAKf,EAAKiB,WAAWT,WAAWO,SAAS,EAAG,KAE5C,EAAKf,EAAKkB,aAAaV,WAAWO,SAAS,EAAG,KAE9C,EAAKf,EAAKmB,aAAaX,WAAWO,SAAS,EAAG,MAIhD,IAAK,IAAMK,KAAOd,EAAY,CAC5B,IAAAe,EAAc,IAAIC,OAAO,GAADC,OAAIH,EAAG,MAAKI,KAAKnB,IAAc,GAAEoB,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAlDM,EAAGF,EAAA,GACV,GAAIE,EAAK,CAEP,IAAMC,EAAqB,MAARR,GAA8B,IAAfO,EAAIxB,OAAe,EAAI,EACzDE,EAAYA,EAAUO,QAAQe,EAAKrB,EAAWc,GAAKS,MAAMD,KAG7D,OAAOvB,EAGF,SAASyB,EAAYC,EAAWC,GAAgC,IAIjEC,EAJ0C5B,EAASH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SACpDgC,EAAMF,EAAUD,EAEtBI,EAAqB9B,EAAU+B,MAAM,KAAIC,GAAAX,EAAAA,EAAAA,GAAAS,EAAA,GAAlCG,EAAID,EAAA,GAAEE,EAAIF,EAAA,GAEjB,GAAY,KAARC,EAAa,CACf,IAAME,EAAON,EAAM,IACP,QAARK,IACFN,EAAWQ,EAAeD,IAG9B,OAAOP,EAIT,SAASQ,EAAeC,GAAM,IAADC,EAAAC,EAC3B,GAAY,IAARF,EACF,MAAO,IAET,IAAMG,EAAMH,EAAIlC,WAAW4B,MAAM,KAIjC,OAHsB,QAATO,EAAGE,EAAI,UAAE,IAAAF,OAAA,EAANA,EAAQ5B,SAAS,EAAG,MAGnB,MAFK,QAAN6B,EAAAC,EAAI,UAAE,IAAAD,OAAA,EAANA,EAAQE,OAAO,EAAG,OAAQ,M,0BCxEvBC,EAAY,WAC/B,SAAAA,EAAYC,EAAQC,IAAWC,EAAAA,EAAAA,GAAA,KAAAH,GAC7BI,KAAKH,OAASA,EACdG,KAAKF,UAAYA,EACjBE,KAAKC,GAAK,KA4GX,OA3GAC,EAAAA,EAAAA,GAAAN,EAAA,EAAA3B,IAAA,OAAAkC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MACD,SAAAC,IAAA,IAAAC,EAAA,YAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACS,IAAIC,SAAQ,SAACC,EAASC,GAE3B,IAAMC,EAAUC,OAAOC,UAAUC,KAAKX,EAAKX,OAAQ,GACnDmB,EAAQI,QAAU,SAAUC,GAC1BC,QAAQC,MAAM,2BAA4BF,EAAMG,OAAOD,OACvDR,EAAOM,EAAMG,OAAOD,QAEtBP,EAAQS,UAAY,SAAAJ,GAClBb,EAAKP,GAAKoB,EAAMG,OAAOE,OACvBZ,EAAQN,EAAKP,KAGfe,EAAQW,gBAAkB,SAAAN,GACxB,IAAMpB,EAAKoB,EAAMG,OAAOE,OACnBzB,EAAG2B,iBAAiBC,SAASrB,EAAKV,YACvBG,EAAG6B,kBAAkBtB,EAAKV,UAAW,CACjDiC,QAAS,KACTC,eAAe,IAGXC,YAAY,YAAa,YAAa,CAC1CC,QAAQ,SAId,wBAAAzB,EAAA0B,UAAA5B,OACH,yBAAAH,EAAAgC,MAAA,KAAArF,YA5BA,IA4BA,CAAAkB,IAAA,YAAAkC,MAAA,eAAAkC,GAAAhC,EAAAA,EAAAA,GAAAC,IAAAA,MACD,SAAAgC,EAAgBC,GAAM,IAAAC,EAAA,YAAAlC,IAAAA,MAAA,SAAAmC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,UACfX,KAAKC,GAAG,CAADwC,EAAA9B,KAAA,eAAA8B,EAAA9B,KAAA,EAEJX,KAAKmB,OAAO,KAAD,SAAAsB,EAAA7B,OAAA,SAEZ,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAGMC,EAHcwB,EAAKvC,GAAGyC,YAAY,CAACF,EAAK1C,WAAY,aAChC6C,YAAYH,EAAK1C,WAErB8C,IAAIL,GAC1BvB,EAAQI,QAAU,SAAAC,GAChBC,QAAQC,MAAM,wBAAyBF,EAAMG,OAAOD,OACpDR,EAAOM,EAAMG,OAAOD,QAEtBP,EAAQS,UAAY,SAAAJ,GAClBP,EAAQO,EAAMG,OAAOE,aAEvB,wBAAAe,EAAAN,UAAAG,EAAA,UACH,gBAAAO,GAAA,OAAAR,EAAAD,MAAA,KAAArF,YAnBA,IAmBA,CAAAkB,IAAA,aAAAkC,MAAA,eAAA2C,GAAAzC,EAAAA,EAAAA,GAAAC,IAAAA,MACD,SAAAyC,IAAA,IAAAC,EAAA,YAAA1C,IAAAA,MAAA,SAAA2C,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,UACOX,KAAKC,GAAG,CAADgD,EAAAtC,KAAA,eAAAsC,EAAAtC,KAAA,EAEJX,KAAKmB,OAAO,KAAD,SAAA8B,EAAArC,OAAA,SAEZ,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAGMC,EAHcgC,EAAK/C,GAAGyC,YAAY,CAACM,EAAKlD,WAAY,YAChC6C,YAAYK,EAAKlD,WAErBoD,SACtBlC,EAAQI,QAAU,SAAAC,GAChBC,QAAQC,MAAM,yBAA0BF,EAAMG,OAAOD,OACrDR,EAAOM,EAAMG,OAAOD,QAEtBP,EAAQS,UAAY,SAAAJ,GAClBP,EAAQO,EAAMG,OAAOE,aAEvB,wBAAAuB,EAAAd,UAAAY,EAAA,UACH,yBAAAD,EAAAV,MAAA,KAAArF,YAnBA,IAmBA,CAAAkB,IAAA,eAAAkC,MAAA,eAAAgD,GAAA9C,EAAAA,EAAAA,GAAAC,IAAAA,MACD,SAAA8C,EAAmBC,GAAE,IAAAC,EAAA,YAAAhD,IAAAA,MAAA,SAAAiD,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,UACdX,KAAKC,GAAG,CAADsD,EAAA5C,KAAA,eAAA4C,EAAA5C,KAAA,EAEJX,KAAKmB,OAAO,KAAD,SAAAoC,EAAA3C,OAAA,SAEZ,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAGMC,EAHcsC,EAAKrD,GAAGyC,YAAY,CAACY,EAAKxD,WAAY,aAChC6C,YAAYW,EAAKxD,WAErB0D,OAAOH,GAC7BrC,EAAQI,QAAU,SAAAC,GAChBC,QAAQC,MAAM,2BAA4BF,EAAMG,OAAOD,OACvDR,EAAOM,EAAMG,OAAOD,QAEtBP,EAAQS,UAAY,SAAAJ,GAClBP,EAAQO,EAAMG,OAAOE,aAEvB,wBAAA6B,EAAApB,UAAAiB,EAAA,UACH,gBAAAK,GAAA,OAAAN,EAAAf,MAAA,KAAArF,YAnBA,IAmBA,CAAAkB,IAAA,oBAAAkC,MAAA,eAAAuD,GAAArD,EAAAA,EAAAA,GAAAC,IAAAA,MACD,SAAAqD,EAAAzF,GAAA,IAAA0F,EAAAzD,EAAA0D,EAAA,YAAAvD,IAAAA,MAAA,SAAAwD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,OAEO,GADLiD,EAAK1F,EAAL0F,MACAzD,EAAKjC,EAALiC,MAEKH,KAAKC,GAAG,CAAD6D,EAAAnD,KAAA,eAAAmD,EAAAnD,KAAA,EAEJX,KAAKmB,OAAO,KAAD,SAAA2C,EAAAlD,OAAA,SAEZ,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAGMC,EAHc6C,EAAK5D,GAAGyC,YAAY,CAACmB,EAAK/D,WAAY,aAChC6C,YAAYkB,EAAK/D,WAErB8D,MAAMA,GAAOG,IAAI5D,GACvCa,EAAQI,QAAU,SAAAC,GAChBC,QAAQC,MAAM,2BAA4BF,EAAMG,OAAOD,OACvDR,EAAOM,EAAMG,OAAOD,QAEtBP,EAAQS,UAAY,SAAAJ,GAClBP,EAAQO,EAAMG,OAAOE,aAEvB,wBAAAoC,EAAA3B,UAAAwB,EAAA,UACH,gBAAAK,GAAA,OAAAN,EAAAtB,MAAA,KAAArF,YAtBA,MAsBA6C,EAhH8B,G,mGCgB3BqE,EAAeC,EAAAA,EAAAA,KACfC,EAASC,EAAAA,EAAAA,OA0Hf,EAtHY,SAAAC,GACV,IAAMC,EF6DD,SAAqBC,EAAMtG,GAChC,IAAMyD,EAAS,GAef,OAdA6C,EAAKC,SAAQ,SAAAC,GAGX,IAAM5H,EAAO,IAAIU,KAAK,IAAIA,KAAKkH,EAAKxG,IAAMyG,sBAAsBC,UAC3DjD,EAAO7E,KAEV6E,EAAO7E,GAAQ,CACb0H,KAAM,GACNK,SAAU,SAIdlD,EAAO7E,GAAM0H,KAAKM,KAAKJ,MAElB/C,EE7EaoD,CAAYT,EAAME,KAAM,aACtCQ,EAAeV,EAAMW,cAC3B1D,QAAQ2D,IAAIX,GACZ,IAAAY,GAAwBC,EAAAA,EAAAA,UAASb,GAAYc,GAAA7G,EAAAA,EAAAA,GAAA2G,EAAA,GAAtCX,EAAIa,EAAA,GAAEC,EAAOD,EAAA,GACdE,EAAWC,OAAOC,OAAO,GAAIjB,GACnCkB,GAAoDN,EAAAA,EAAAA,UAAS,KAAIO,GAAAnH,EAAAA,EAAAA,GAAAkH,EAAA,GAA1DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAC1CG,EAAU,CAAC,CACfC,KAAM,2BACN3F,MAAO,aACN,CACD2F,KAAM,2BACN3F,MAAO,cAGT4F,GAAwCZ,EAAAA,EAAAA,UAAS,aAAYa,GAAAzH,EAAAA,EAAAA,GAAAwH,EAAA,GAAtDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAM9BG,GAHK,IAAIC,EAAQ,eAAgB,WAGf,SAAA/B,GACtB,IACEE,EAEEF,EAFFE,KACA8B,EACEhC,EADFgC,UAcF,OAAoBC,EAAAA,cAAoBpC,EAAAA,EAAW,CACjDqC,UAAU,EACVC,WAAW,GACVjC,EAAKkC,KAAI,SAAChC,EAAMb,GACjB,IAAM8C,EAAM,kBAAAtI,OAAWqG,EAAKkC,MAAK,oCAAAvI,OAAexB,EAAW6H,EAAKmC,UAAW,uBAAsB,wBAAAxI,OAAaqG,EAAKoC,UAAS,KAC5H,OAAoBP,EAAAA,cAAoBrC,EAAc,CACpDyC,OAAQA,EACRZ,KAAK,GAAD1H,OAAKiI,EAAS,KAAAjI,OAAIwF,GACtB3F,IAAI,GAADG,OAAKiI,EAAS,KAAAjI,OAAIwF,GACrBkD,MAAoBR,EAAAA,cAAoBA,EAAAA,SAAgB,KAAmBA,EAAAA,cAAoBS,EAAAA,EAAS,CACtGC,KAAM,UACNC,OAAQ,SACRC,MAAO,SACPC,KAAmBb,EAAAA,cAAoBc,EAAAA,EAAa,MACpDC,QAAS,WACPtC,EAAaR,EAAKX,GAAOgD,gBAGfN,EAAAA,cAAoBgB,EAAAA,EAAO,CACzCC,KAAM,QACNC,WAAY/C,EAAKgD,QACjBC,OAAQ,SAACC,EAAYC,GAAe,OAAkBtB,EAAAA,cAAoBgB,EAAAA,EAAAA,KAAY,CACpFrJ,IAAK2J,GACH,WAAO,IAADC,EAAAC,EACFlB,GAA6C,QAAjCiB,EAAApD,EAAKgD,QAAQG,EAAkB,UAAE,IAAAC,OAAA,EAAjCA,EAAmCxI,QAAuB,QAAnByI,EAAIrD,EAAKgD,QAAQ,UAAE,IAAAK,OAAA,EAAfA,EAAiBzI,MAC9E,MAAM,GAANjB,OAAUuJ,EAAWxH,MAAK,QAAA/B,OAAOO,EAAYiI,EAAWe,EAAWtI,MAAK,KAFtE,cASV,SAAS0I,EAAa9J,GACpB,IAAM+J,EAAiC,MAA1B1C,EAASrH,GAAK2G,SAC3BU,EAASrH,GAAK2G,SAAWoD,EAAO,OAAS,KACzC1C,EAASrH,GAAKsG,KFcX,SAAkC7C,EAAQzD,GAAmB,IAAd+I,EAAIjK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAQ3D,MANY,MAARiK,EACFtF,EAAOuG,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEjK,GAAOkK,EAAElK,MAChB,QAAR+I,GACTtF,EAAOuG,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAElK,GAAOiK,EAAEjK,MAEnCqD,QAAQ2D,IAAIvD,GACLA,EEtBgB0G,CAAyB9C,EAASrH,GAAKsG,KAAM0B,EAAcX,EAASrH,GAAK2G,UAC9FS,EAAQC,GAEV,OAAoBgB,EAAAA,cAAoBpC,EAAAA,EAAW,CACjDqC,UAAU,EACVC,WAAW,EACX6B,MAAO,CACLC,UAAW,IACXC,UAAW,QAEbC,iBAAkB,IAClBC,SAAU,SAAAC,GACR9C,EAAsB8C,KAEvBnD,OAAOoD,KAAKpE,GAAM0D,MAAK,SAACC,EAAGC,GAAC,OAAK3K,OAAO2K,GAAK3K,OAAO0K,MAAIzB,KAAI,SAACxI,EAAK2K,GACnE,IAAMC,EAAWvD,EAASrH,GACpB6K,EAAmBxC,EAAAA,cAAoByC,EAAAA,EAAQ,KAAmBzC,EAAAA,cAAoBlC,EAAAA,EAAS,CACnG4E,YAAa,uCACbX,MAAO,CACLY,MAAO,KAETC,aAAcrD,EAAQ,GAAG1F,MACzBsI,SAAU,SAAAC,GACRxC,EAAgBwC,KAEjB7C,EAAQY,KAAI,SAAC0C,EAAQvF,GAAK,OAAkB0C,EAAAA,cAAoBnC,EAAQ,CACzElG,IAAKkL,EAAOhJ,MACZA,MAAOgJ,EAAOhJ,OACbgJ,EAAOrD,UAAsBQ,EAAAA,cAAoBS,EAAAA,EAAS,CAC3DM,QAAS,WACPU,EAAa9J,IAEfkJ,KAA2B,MAArB0B,EAASjE,SAAgC0B,EAAAA,cAAoB8C,EAAAA,EAAoB,MAAqB9C,EAAAA,cAAoB+C,EAAAA,EAAqB,OAC/H,MAArBR,EAASjE,SAAmB,eAAO,iBACtC,OAAoB0B,EAAAA,cAAoBrC,EAAc,CACpDyC,OAAQ9J,EAAWqB,GACnB6H,KAAM,GAAK8C,EACX9B,MAAOnB,GAAsB,GAAKiD,GAAOE,EACzC7K,IAAKA,GACSqI,EAAAA,cAAoBH,EAAiB,CACnD5B,KAAMsE,EAAStE,KACf8B,UAAWuC,UC5GfU,EAEEC,EAAAA,EAAAA,MADFC,EACED,EAAAA,EAAAA,UAWA3C,GAVa6C,EAAAA,EAAAA,KAGbC,EAAAA,EAAAA,YAOY,GACZC,EAAU,EACVtK,EAAO,GAGX,SAASuK,EAAQlK,GAEf,IADA,IAAIgC,EAAS,GACJmI,EAAI,EAAGA,EAAInK,EAAI1C,OAAQ6M,IAC1BC,MAAMC,QAAQrK,EAAImK,IAEpBnI,EAASA,EAAOtD,OAAOwL,EAAQlK,EAAImK,KAGnCnI,EAAOmD,KAAKnF,EAAImK,IAGpB,OAAOnI,EAEM,SAASsI,IAEtB,IAAM/J,EAAK,IAAIgK,EAAQ,eAAgB,WAGvC/E,GAAsBC,EAAAA,EAAAA,UAAS,GAAEC,GAAA7G,EAAAA,EAAAA,GAAA2G,EAAA,GAA1BgF,EAAG9E,EAAA,GAAE+E,EAAM/E,EAAA,GAClBK,GAAsBN,EAAAA,EAAAA,UAAS,GAAEO,GAAAnH,EAAAA,EAAAA,GAAAkH,EAAA,GAA1B2E,EAAG1E,EAAA,GAAE2E,EAAM3E,EAAA,GAClBK,GAA0BZ,EAAAA,EAAAA,UAAS,GAAEa,GAAAzH,EAAAA,EAAAA,GAAAwH,EAAA,GAA9BuE,EAAKtE,EAAA,GAAEuE,EAAQvE,EAAA,GACtBwE,GAAoCrF,EAAAA,EAAAA,UAAS,IAAGsF,GAAAlM,EAAAA,EAAAA,GAAAiM,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAEhCG,GAAwBzF,EAAAA,EAAAA,UAAS,IAAG0F,GAAAtM,EAAAA,EAAAA,GAAAqM,EAAA,GAA7BrG,EAAIsG,EAAA,GAAExF,EAAOwF,EAAA,GAEpBC,GAA4B3F,EAAAA,EAAAA,UAAS,IAAG4F,GAAAxM,EAAAA,EAAAA,GAAAuM,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAiC/F,EAAAA,EAAAA,WAAS,GAAKgG,GAAA5M,EAAAA,EAAAA,GAAA2M,EAAA,GAAxCE,EAASD,EAAA,GAAEE,GAAWF,EAAA,GAE7BG,IAA8BnG,EAAAA,EAAAA,WAAS,GAAMoG,IAAAhN,EAAAA,EAAAA,GAAA+M,GAAA,GAAtCE,GAAOD,GAAA,GAAEE,GAAUF,GAAA,GAgB1B,SAASG,KAKP,IAHA,IA+BqBC,EA/BfC,EA4CR,SAAiBlM,GACf,IAAK,IAAImK,EAAInK,EAAI1C,OAAS,EAAG6M,EAAI,EAAGA,IAAK,CACvC,IAAMgC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYnC,EAAI,IAAI3L,EAC3B,CAACwB,EAAImM,GAAInM,EAAImK,IAA/BnK,EAAImK,GAAE3L,EAAA,GAAEwB,EAAImM,GAAE3N,EAAA,GAEjB,OAAOwB,EAjDKuM,EA+BSN,EA/BavB,EAAMF,EAgCjCJ,MAAMoC,KAAK,CAChBlP,OAAQ2O,IACP,SAACQ,EAAGtC,GACL,MAAO,CACL1J,MAAO0J,EAAI,EACX5C,OAAQ,UACR5H,KAAM,QApCJK,EAAM,GACH0M,EAAI,EAAGA,EAAIlC,EAAKkC,IACvB1M,EAAImF,KAAK+G,EAAIlN,MAAM0L,EAAMgC,EAAGhC,GAAOgC,EAAI,KAEzC/G,EAAQ3F,IAvBV2M,EAAAA,EAAAA,YAAU,WAERpM,EAAGqM,aAAaC,MAAK,SAAAC,GACnB7B,EAAc6B,GACdlL,QAAQ2D,IAAI,kCAAUuH,QAEvB,KACHH,EAAAA,EAAAA,YAAU,WACR/K,QAAQ2D,IAAI,gCACZsF,EAASL,EAAME,GACfsB,OAEC,CAACxB,EAAKE,IA0DT,IAAMqC,GAAY,CAChBC,MAAK,WACH9F,GAAY,IAAIrJ,MAAOoH,WAEzBgI,IAAG,SAACC,GACFjD,GAAU,IAAIpM,MAAOoH,UACrBtF,EAAOV,EAAYiI,EAAW+C,GAE9B3J,KAAK6M,aAAWC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,GACZF,GAAM,IACTvN,KAAAA,MAGJ0N,WAAU,SAAAzO,GAKN,IAJF4L,EAAG5L,EAAH4L,IACAE,EAAG9L,EAAH8L,IACA9E,EAAQhH,EAARgH,SACAjG,EAAIf,EAAJe,KAEMkF,EAAOqF,EAAQtE,GAAU2C,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAE/H,MAAQgI,EAAEhI,SACpDsH,EAAUuF,aAAaC,QAAQ,oBACjCC,EAAiB,GACfC,EAAM,CACVxG,MAAOuD,EAAM,IAAME,EACnBxD,UAAWrC,EAAK,GAAGlF,KACnBsK,QAASpF,EAAKA,EAAKvH,OAAS,GAAGqC,KAC/BwH,UAAWxH,EACXoI,QAASlD,GAEPkD,GACFyF,EAAiBE,KAAKC,MAAM5F,IACb5C,KAAKsI,GAEpBD,EAAiB,CAACC,GAEpBxC,EAAcuC,GACdF,aAAaM,QAAQ,mBAAoBF,KAAKG,UAAUL,KAEpDL,YAAW,SAAAW,GAKb,IAADhN,EAAA,YAAAH,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAC,IAAA,IAAA2J,EAAAE,EAAA9E,EAAAjG,EAAAkF,EAAAoD,EAAA,OAAArH,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGD,OAPAuJ,EAAGsD,EAAHtD,IACAE,EAAGoD,EAAHpD,IACA9E,EAAQkI,EAARlI,SACAjG,EAAImO,EAAJnO,KAGMkF,EAAOqF,EAAQtE,GAAU2C,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAE/H,MAAQgI,EAAEhI,SAC1DM,EAAAE,KAAA,EAC6BV,EAAGqM,aAAa,KAAD,EAAxB7L,EAAAgN,KAEd9F,EAAa,CACjBhB,MAAOuD,EAAM,IAAME,EACnBxD,UAAWrC,EAAK,GAAGlF,KACnBsK,QAASpF,EAAKA,EAAKvH,OAAS,GAAGqC,KAC/BwH,UAAWxH,EACXoI,QAASlD,GAGXtE,EAAGyN,UAAU/F,GACbnH,EAAK8L,aAEL,wBAAA7L,EAAA0B,UAAA5B,MAjBCF,IAoBH0E,aAAY,SAAC5E,GAEXF,EAAG0N,kBAAkB,CACnB/J,MAAO,YACPzD,MAAAA,IACCoM,KAAI,eAAAqB,GAAAvN,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAgC,EAAMC,GAAM,OAAAjC,IAAAA,MAAA,SAAAmC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EAEZV,EAAG8E,aAAaxC,EAAOc,IAAI,KAAD,SAAAZ,EAAA9B,KAAA,EAE1B8L,GAAUH,aAAa,KAAD,mBAAA7J,EAAAN,UAAAG,OAC7B,gBAAAO,GAAA,OAAA+K,EAAAxL,MAAA,KAAArF,YALM,IAKJ8Q,OAAM,SAAAC,GACPxM,QAAQ2D,IAAI6I,GACZC,EAAAA,EAAAA,MAAe,GAAKD,OAGlBxB,WAAU,WAAI,OAADjM,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAyC,IAAA,IAAAiL,EAAA,OAAA1N,IAAAA,MAAA,SAAA2C,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACQV,EAAGqM,aAAa,KAAD,EAAlC0B,EAAU/K,EAAAwK,KAChBnM,QAAQ2D,IAAI+I,GAEZrD,EAAcqD,GAAY,wBAAA/K,EAAAd,UAAAY,MAJT1C,KASrB,SAAS4N,GAAOC,GAGZ,IAFFC,EAAID,EAAJC,KACAC,EAAQF,EAARE,SAGA,SAASC,EAAgBC,EAGtBF,EAAUG,GAAW,IAFtBpO,EAAKmO,EAALnO,MAGA,GAAc,WAFRmO,EAANrH,OAEA,CAEA,IAAM3B,EAAWf,EAAK7F,QAEtB,GAAa,GAATyB,EAEFsM,GAAUC,QAEVzB,EAAU,CAAC9K,IACXmF,EAAS8I,GAAUG,GAAUtH,OAAS,QACtC3B,EAAS8I,GAAUG,GAAUlP,MAAO,IAAI9B,MAAOoH,eAElCqG,EAAOA,EAAOhO,OAAS,GACzB,GAAKmD,GAEd8K,EAAU,GAAD7M,QAAAoQ,EAAAA,EAAAA,GAAKxD,GAAM,CAAE7K,KACtBmF,EAAS8I,GAAUG,GAAUtH,OAAS,QACtC3B,EAAS8I,GAAUG,GAAUlP,MAAO,IAAI9B,MAAOoH,UAC3CxE,GAASmK,GACXmC,GAAUE,IAAI,CACZzC,IAAAA,EACAE,IAAAA,EACA9E,SAAAA,KAKJA,EAAS8I,GAAUG,GAAUtH,OAAS,QAG1C5B,EAAQC,IAMV,SAASmJ,EAAcC,EAEpBN,EAAUG,GACX,GAAc,SAFRG,EAANzH,OAEA,CAEA,IAAM3B,EAAWf,EAAK7F,QAEtB4G,EAAS8I,GAAUG,GAAUtH,OAAS,UAEtC5B,EAAQC,IAEV,OAAoBgB,EAAAA,cAAoB,MAAO,CAC7CqI,UAAW,YACVR,EAAK1H,KAAI,SAACoD,EAAG0E,GAAQ,OAAkBjI,EAAAA,cAAoB,SAAU,CACtEqI,UAAWC,GAAAA,CAAW,CAAC,WAAY,CACjC,MAAqB,SAAZ/E,EAAE5C,QACV,CACD,MAAqB,SAAZ4C,EAAE5C,UAEbhJ,IAAK4L,EAAE1J,MACP0O,YAAa,WACXR,EAAiBxE,EAAGuE,EAAUG,IAEhCO,aAAc,WACZT,EAAiBxE,EAAGuE,EAAUG,IAEhCQ,UAAW,WACTN,EAAe5E,EAAGuE,EAAUG,IAE9BS,WAAY,WACVP,EAAe5E,EAAGuE,EAAUG,KAE7B1E,EAAE1J,WAIP,SAAS8O,KACP,OAAIzD,GACkBd,EAAW1N,OAAS,EAElBsJ,EAAAA,cAAoB4I,EAAU,CAChD3K,KAAMmG,EACN1F,cAAeyH,GAAU1H,eAGPuB,EAAAA,cAAoB6I,EAAAA,EAAQ,CAC9CC,YAAa,qDAIC9I,EAAAA,cAAoB,MAAO,MAEjD,OAAoBA,EAAAA,cAAoB+I,EAAAA,EAAO,KAAmB/I,EAAAA,cAAoByC,EAAAA,EAAQ,CAC5FxB,KAAM,SACQjB,EAAAA,cAAoBgJ,EAAAA,EAAc,CAChDjH,MAAO,CACLY,MAAO,KAETsG,KAAM,SACNC,OAAQ,MACRtG,aAAcgB,EACduF,IAAK,EACLC,UAAW,EACXjH,SA9OF,SAAyBC,GACvB,IAAMvI,EAAQuI,EACdpH,QAAQ2D,IAAI9E,GAEVgK,EADEhK,EACKwP,SAASxP,GAET,MAyOMmG,EAAAA,cAAoBgJ,EAAAA,EAAc,CACjDjH,MAAO,CACLY,MAAO,KAETsG,KAAM,SACNC,OAAQ,MACRtG,aAAckB,EACdqF,IAAK,EACLC,UAAW,EACXjH,SA7OF,SAAyBC,GAGrB2B,EAFY3B,EAELiH,SAFKjH,GAIL,MAyOMpC,EAAAA,cAAoBS,EAAAA,EAAS,CAC5CM,QAASqE,IACR,iBAA+BpF,EAAAA,cAAoByC,EAAAA,EAAQ,KAAmBzC,EAAAA,cAAoBS,EAAAA,EAAS,CAC5GM,QAAS,WACPoE,IAAW,KAEZ,6BAA2CnF,EAAAA,cAAoByC,EAAAA,EAAQ,KAAmBzC,EAAAA,cAAoB,OAAQ,KAAM,8BAA4CA,EAAAA,cAAoBsJ,EAAAA,EAAS,CACtMC,gBAAgB,EAChBtI,KAAM,QACNkB,SAAU,WACR4C,IAAaD,MAEbA,GAA0B9E,EAAAA,cAAoB,OAAQ,CACxDqI,UAAW,QACV,iBAAkBtP,GAAQ,EAAG,aAA2BiH,EAAAA,cAAoBiD,EAAAA,EAAa,KAAmBjD,EAAAA,cAAoBgD,EAAO,CACxIwG,QAAS,EACTzH,MAAO,CACL0H,UAAW,SAEZ,4BAA0CzJ,EAAAA,cAAoBkD,EAAW,KAAM,wCAAsDlD,EAAAA,cAAoB0J,EAAAA,EAAM,CAChKC,UAAU,GACT,iBAAkB,wGAAsH3J,EAAAA,cAAoB0J,EAAAA,EAAM,CACnKC,UAAU,GACT,KAAM,0MAAwN3J,EAAAA,cAAoB,MAAO,CAC1PqI,UAAW,UACXtL,GAAI,gBACHkB,EAAKkC,KAAI,SAACoD,EAAGqG,GAAG,OAAkB5J,EAAAA,cAAoB2H,GAAS,CAChEE,KAAMtE,EACNuE,SAAU8B,EACVjS,IAAKiS,QACY5J,EAAAA,cAAoB6J,EAAAA,EAAQ,CAC7C3E,QAASA,GACT4E,aAAa,EACbC,MAAO,2BACPhI,MAAO,CACLiI,IAAK,GACLrH,MAAO,MACPsH,SAAU,KAEZC,KAAM,kBAAM/E,IAAW,IACvBgF,SAAU,kBAAMhF,IAAW,KACbnF,EAAAA,cAAoB2I,GAAc","sources":["utils/timeFormat.ts","utils/indexDB.js","components/Games/Collapse.tsx","pages/games/paixu/index.tsx"],"sourcesContent":["/**\r\n * @description 格式化时间\r\n * @param {Date} dateTime 需要格式化的任意合法时间格式\r\n * @param {String} formatStr 格式化规则 yyyy:mm:dd|yyyy:mm|yyyy年mm月dd日|yyyy年mm月dd日 hh时MM分等,可自定义组合 默认yyyy-mm-dd\r\n * @returns {string} 返回格式化后的字符串\r\n */\nexport function timeFormat(dateTime = null, formatStr = 'yyyy-mm-dd') {\n  let date;\n  // 若传入时间为假值，则取当前时间\n  if (!dateTime) {\n    date = new Date();\n  }\n  // 若为unix秒时间戳，则转为毫秒时间戳（逻辑有点奇怪，但不敢改，以保证历史兼容）\n  else if (/^\\d{10}$/.test(dateTime.toString().trim())) {\n    date = new Date(dateTime * 1000);\n  }\n  // 若用户传入字符串格式时间戳，new Date无法解析，需做兼容\n  else if (typeof dateTime === 'string' && /^\\d+$/.test(dateTime.trim())) {\n    date = new Date(Number(dateTime));\n  }\n  // 其他都认为符合 RFC 2822 规范\n  else {\n    // 处理平台性差异，在Safari/Webkit中，new Date仅支持/作为分割符的字符串时间\n    date = new Date(typeof dateTime === 'string' ? dateTime.replace(/-/g, '/') : dateTime);\n  }\n  const timeSource = {\n    'y': date.getFullYear().toString(),\n    // 年\n    'm': (date.getMonth() + 1).toString().padStart(2, '0'),\n    // 月\n    'd': date.getDate().toString().padStart(2, '0'),\n    // 日\n    'h': date.getHours().toString().padStart(2, '0'),\n    // 时\n    'M': date.getMinutes().toString().padStart(2, '0'),\n    // 分\n    's': date.getSeconds().toString().padStart(2, '0') // 秒\n    // 有其他格式化字符需求可以继续添加，必须转化成字符串\n  };\n\n  for (const key in timeSource) {\n    const [ret] = new RegExp(`${key}+`).exec(formatStr) || [];\n    if (ret) {\n      // 年可能只需展示两位\n      const beginIndex = key === 'y' && ret.length === 2 ? 2 : 0;\n      formatStr = formatStr.replace(ret, timeSource[key].slice(beginIndex));\n    }\n  }\n  return formatStr;\n}\n// 两个时间的差\nexport function computeTime(smallTime, bigTime, formatStr = \"s:0.00\") {\n  const cha = bigTime - smallTime;\n  // [unit, 单位s/ms ] [bits, 数组部分格式]\n  const [unit, bits] = formatStr.split(\":\");\n  let overTime;\n  if (unit == 's') {\n    const time = cha / 1000;\n    if (bits == \"0.00\") {\n      overTime = formatTime0_00(time);\n    }\n  }\n  return overTime;\n}\n\n// 格式化时间差值的0.00格式\nfunction formatTime0_00(str) {\n  if (str === 0) {\n    return \"0\";\n  }\n  const arr = str.toString().split('.');\n  const integer = arr[0]?.padStart(1, '0'); // 补齐整数部分的位数\n  const decimal = arr[1]?.padEnd(2, '0') || \"00\"; // 补齐小数部分的位数\n\n  return integer + '.' + decimal;\n}\n\n/**\r\n * 将给定数据按日期分组\r\n * @param {Array} data - 给定数据，数组形式，每个元素是一个对象\r\n * @param {String} key - 指定键, 以这个键的值作比较\r\n * @returns {Object} - 返回分组后的对象，以日期为键，值为该日期下的数据数组\r\n */\nexport function groupByDate(data, key) {\n  const result = {};\n  data.forEach(item => {\n    // 将时间戳转化为本地日期字符串，ex: 2023-06-17\n    // const date = timeFormat(new Date(item[key]).toLocaleDateString())\n    const date = new Date(new Date(item[key]).toLocaleDateString()).getTime();\n    if (!result[date]) {\n      // 若不存在该日期的键，则创建一个空数组\n      result[date] = {\n        data: [],\n        sortType: 'down'\n      };\n    }\n    // 将当前元素添加到该日期的数组中\n    result[date].data.push(item);\n  });\n  return result;\n}\n\n/**\r\n * 将给定数据按时间排序并按日期分组\r\n * @param {Array} result - 给定数据，数组形式，每个元素是一个对象\r\n * @param {String} key - 指定键, 以这个键的值作比较\r\n * @returns {Object} - 返回分组后的对象，以日期为键，值为该日期下的数据数组，数组中的元素按升序排列\r\n */\nexport function sortByTimeAndGroupByDate(result, key, type = \"up\") {\n  // 对每个日期下的数据数组按[key] 升序排列\n  if (type == \"up\") {\n    result.sort((a, b) => a[key] - b[key]);\n  } else if (type == \"down\") {\n    result.sort((a, b) => b[key] - a[key]);\n  }\n  console.log(result);\n  return result;\n}\n\n/**\r\n * 将给定数据按时间排序并按日期分组\r\n * @param {Array} result - 给定数据，数组形式，每个元素是一个对象\r\n * @param {String} key - 指定键, 以这个键的值作比较\r\n * @returns {Object} - 返回分组后的对象，以日期为键，值为该日期下的数据数组，数组中的元素按升序排列\r\n */\nexport function sortByTimeAndGroupByDates(result, key, type = \"up\") {\n  // 对每个日期下的数据数组按[key] 升序排列\n  if (type == \"up\") {\n    result.sort((a, b) => a[key] - b[key]);\n  } else if (type == \"down\") {\n    result.sort((a, b) => b[key] - a[key]);\n  }\n  console.log(result);\n  return result;\n}","export default class GameRecordDB {\n  constructor(dbName, storeName) {\n    this.dbName = dbName;\n    this.storeName = storeName;\n    this.db = null;\n  }\n  async open() {\n    return new Promise((resolve, reject) => {\n      // 打开数据库\n      const request = window.indexedDB.open(this.dbName, 1);\n      request.onerror = function (event) {\n        console.error('Failed to open database:', event.target.error);\n        reject(event.target.error);\n      };\n      request.onsuccess = event => {\n        this.db = event.target.result;\n        resolve(this.db);\n      };\n      // 创建一个新的存储对象\n      request.onupgradeneeded = event => {\n        const db = event.target.result;\n        if (!db.objectStoreNames.contains(this.storeName)) {\n          const store = db.createObjectStore(this.storeName, {\n            keyPath: 'id',\n            autoIncrement: true\n          });\n          // 创建一个新的索引\n          store.createIndex('startTime', 'startTime', {\n            unique: false\n          });\n        }\n      };\n    });\n  }\n  async addRecord(record) {\n    if (!this.db) {\n      // 如果数据库还没有打开，先打开数据库\n      await this.open();\n    }\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([this.storeName], 'readwrite');\n      const store = transaction.objectStore(this.storeName);\n      // 添加一条记录\n      const request = store.add(record);\n      request.onerror = event => {\n        console.error('Failed to add record:', event.target.error);\n        reject(event.target.error);\n      };\n      request.onsuccess = event => {\n        resolve(event.target.result);\n      };\n    });\n  }\n  async getRecords() {\n    if (!this.db) {\n      // 如果数据库还没有打开，先打开数据库\n      await this.open();\n    }\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([this.storeName], 'readonly');\n      const store = transaction.objectStore(this.storeName);\n      // 获取所有记录\n      const request = store.getAll();\n      request.onerror = event => {\n        console.error('Failed to get records:', event.target.error);\n        reject(event.target.error);\n      };\n      request.onsuccess = event => {\n        resolve(event.target.result);\n      };\n    });\n  }\n  async deleteRecord(id) {\n    if (!this.db) {\n      // 如果数据库还没有打开，先打开数据库\n      await this.open();\n    }\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([this.storeName], 'readwrite');\n      const store = transaction.objectStore(this.storeName);\n      // 删除一条记录\n      const request = store.delete(id);\n      request.onerror = event => {\n        console.error('Failed to delete record:', event.target.error);\n        reject(event.target.error);\n      };\n      request.onsuccess = event => {\n        resolve(event.target.result);\n      };\n    });\n  }\n  async getRecordsByIndex({\n    index,\n    value\n  }) {\n    if (!this.db) {\n      // 如果数据库还没有打开，先打开数据库\n      await this.open();\n    }\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([this.storeName], 'readwrite');\n      const store = transaction.objectStore(this.storeName);\n      // 删除一条记录\n      const request = store.index(index).get(value);\n      request.onerror = event => {\n        console.error('Failed to delete record:', event.target.error);\n        reject(event.target.error);\n      };\n      request.onsuccess = event => {\n        resolve(event.target.result);\n      };\n    });\n  }\n}","import \"@arco-design/web-react/es/Space/style\";\nimport _Space from \"@arco-design/web-react/es/Space\";\nimport _IconSortDescending from \"@arco-design/web-react/icon/react-icon/IconSortDescending\";\nimport _IconSortAscending from \"@arco-design/web-react/icon/react-icon/IconSortAscending\";\nimport \"@arco-design/web-react/es/List/style\";\nimport _List from \"@arco-design/web-react/es/List\";\nimport \"@arco-design/web-react/es/Button/style\";\nimport _Button from \"@arco-design/web-react/es/Button\";\nimport _IconDelete from \"@arco-design/web-react/icon/react-icon/IconDelete\";\nimport \"@arco-design/web-react/es/Message/style\";\nimport _Message from \"@arco-design/web-react/es/Message\";\nimport \"@arco-design/web-react/es/Select/style\";\nimport _Select from \"@arco-design/web-react/es/Select\";\nimport \"@arco-design/web-react/es/Collapse/style\";\nimport _Collapse from \"@arco-design/web-react/es/Collapse\";\nimport React, { useState } from \"react\";\nconst CollapseItem = _Collapse.Item;\nconst Option = _Select.Option;\nimport { timeFormat, groupByDate, sortByTimeAndGroupByDate, computeTime } from \"../../utils/timeFormat\";\nimport IndexDB from '../../utils/indexDB';\n// 外层\nconst App = props => {\n  const yuanshiData = groupByDate(props.data, \"startTime\");\n  const deleteRecord = props.deleteHandler;\n  console.log(yuanshiData);\n  const [data, setData] = useState(yuanshiData);\n  const dataCopy = Object.assign({}, data); // 必须是深克隆, react中如果引用地址不变，是不触发重新渲染的，但是值是设置进去了\n  const [activeCollapseItem, setActiveCollapseItem] = useState(\"0\");\n  const options = [{\n    name: \"开始时间\",\n    value: \"startTime\"\n  }, {\n    name: \"游戏成绩\",\n    value: \"totalTime\"\n  }];\n  // 下拉框选择值\n  const [activeOption, setActiveOption] = useState(\"startTime\");\n\n  // 创建一个新的数据库实例\n  const db = new IndexDB('game_records', 'records');\n\n  // 内层嵌套\n  const CollapseNeiceng = props => {\n    const {\n      data,\n      fatherKey\n    } = props;\n    // 删除记录\n    async function deleteItem(index) {\n      db.getRecordsByIndex({\n        index: \"startTime\",\n        value: data[index].startTime\n      }).then(record => {\n        db.deleteRecord(record.id);\n      }).catch(err => {\n        console.log(err);\n        _Message.error(\"\" + err);\n      });\n    }\n    return /*#__PURE__*/React.createElement(_Collapse, {\n      lazyload: true,\n      accordion: true\n    }, data.map((item, index) => {\n      const header = `大小:  ${item.guige} ---- 开始时间: ${timeFormat(item.startTime, \"yyyy-mm-dd hh:MM:ss\")} ---- 成绩: ${item.totalTime}s`;\n      return /*#__PURE__*/React.createElement(CollapseItem, {\n        header: header,\n        name: `${fatherKey}-${index}`,\n        key: `${fatherKey}-${index}`,\n        extra: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Button, {\n          type: \"primary\",\n          status: \"danger\",\n          shape: \"circle\",\n          icon: /*#__PURE__*/React.createElement(_IconDelete, null),\n          onClick: () => {\n            deleteRecord(data[index].startTime);\n          }\n        }))\n      }, /*#__PURE__*/React.createElement(_List, {\n        size: \"small\",\n        dataSource: item.records,\n        render: (recordItem, recordItemIndex) => /*#__PURE__*/React.createElement(_List.Item, {\n          key: recordItemIndex\n        }, (() => {\n          const startTime = item.records[recordItemIndex - 1]?.time || item.records[0]?.time;\n          return `${recordItem.value} -- ${computeTime(startTime, recordItem.time)}s`;\n        })())\n      }));\n    }));\n  };\n\n  // 时间排序\n  function records_time(key) {\n    const isUp = dataCopy[key].sortType == 'up';\n    dataCopy[key].sortType = isUp ? 'down' : 'up';\n    dataCopy[key].data = sortByTimeAndGroupByDate(dataCopy[key].data, activeOption, dataCopy[key].sortType);\n    setData(dataCopy);\n  }\n  return /*#__PURE__*/React.createElement(_Collapse, {\n    lazyload: true,\n    accordion: true,\n    style: {\n      maxHeight: 600,\n      overflowY: \"auto\"\n    },\n    defaultActiveKey: '0',\n    onChange: e => {\n      setActiveCollapseItem(e);\n    }\n  }, Object.keys(data).sort((a, b) => Number(b) - Number(a)).map((key, idx) => {\n    const dateData = dataCopy[key];\n    const btn = /*#__PURE__*/React.createElement(_Space, null, /*#__PURE__*/React.createElement(_Select, {\n      placeholder: \"\\u9009\\u62E9\\u6392\\u5E8F\\u65B9\\u5F0F\",\n      style: {\n        width: 154\n      },\n      defaultValue: options[0].value,\n      onChange: e => {\n        setActiveOption(e);\n      }\n    }, options.map((option, index) => /*#__PURE__*/React.createElement(Option, {\n      key: option.value,\n      value: option.value\n    }, option.name))), /*#__PURE__*/React.createElement(_Button, {\n      onClick: () => {\n        records_time(key);\n      },\n      icon: dateData.sortType == 'up' ? /*#__PURE__*/React.createElement(_IconSortAscending, null) : /*#__PURE__*/React.createElement(_IconSortDescending, null)\n    }, dateData.sortType == 'up' ? '降序' : '升序'));\n    return /*#__PURE__*/React.createElement(CollapseItem, {\n      header: timeFormat(key),\n      name: '' + idx,\n      extra: activeCollapseItem == \"\" + idx && btn,\n      key: key\n    }, /*#__PURE__*/React.createElement(CollapseNeiceng, {\n      data: dateData.data,\n      fatherKey: idx\n    }));\n  }));\n};\nexport default App;","import \"@arco-design/web-react/es/Card/style\";\nimport _Card from \"@arco-design/web-react/es/Card\";\nimport \"@arco-design/web-react/es/Modal/style\";\nimport _Modal from \"@arco-design/web-react/es/Modal\";\nimport \"@arco-design/web-react/es/Tag/style\";\nimport _Tag from \"@arco-design/web-react/es/Tag\";\nimport \"@arco-design/web-react/es/Switch/style\";\nimport _Switch from \"@arco-design/web-react/es/Switch\";\nimport \"@arco-design/web-react/es/Space/style\";\nimport _Space from \"@arco-design/web-react/es/Space\";\nimport \"@arco-design/web-react/es/Button/style\";\nimport _Button from \"@arco-design/web-react/es/Button\";\nimport \"@arco-design/web-react/es/InputNumber/style\";\nimport _InputNumber from \"@arco-design/web-react/es/InputNumber\";\nimport \"@arco-design/web-react/es/Empty/style\";\nimport _Empty from \"@arco-design/web-react/es/Empty\";\nimport \"@arco-design/web-react/es/Message/style\";\nimport _Message from \"@arco-design/web-react/es/Message\";\nimport \"@arco-design/web-react/es/TimePicker/style\";\nimport _TimePicker from \"@arco-design/web-react/es/TimePicker\";\nimport \"@arco-design/web-react/es/Form/style\";\nimport _Form from \"@arco-design/web-react/es/Form\";\nimport \"@arco-design/web-react/es/Typography/style\";\nimport _Typography from \"@arco-design/web-react/es/Typography\";\nimport React, { useState, useEffect } from \"react\";\nimport classnames from 'classnames';\nconst {\n  Title,\n  Paragraph\n} = _Typography;\nconst FormItem = _Form.Item;\nconst {\n  RangePicker\n} = _TimePicker;\nimport { computeTime } from \"@/utils/timeFormat\";\nimport indexDB from \"@/utils/indexDB\";\nimport Collapse from \"@/components/Games/Collapse\";\nimport \"./index.less\";\n\n// 开始-结束 —— 时间\nlet startTime = 0;\nlet endTime = 0;\nlet time = \"\";\n\n// 数组扁平化\nfunction flatten(arr) {\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (Array.isArray(arr[i])) {\n      // 如果当前元素是数组，则递归调用flatten函数\n      result = result.concat(flatten(arr[i]));\n    } else {\n      // 如果当前元素不是数组，则将其添加到结果数组中\n      result.push(arr[i]);\n    }\n  }\n  return result;\n}\nexport default function Demo() {\n  // 创建一个新的数据库实例\n  const db = new indexDB('game_records', 'records');\n\n  // 规格\n  const [row, setRow] = useState(2); // 行数\n  const [col, setCol] = useState(2); // 列数\n  const [total, setTotal] = useState(0); // 总数\n  const [recordsDom, setRecordsDom] = useState([]); //记录\n  // 生成的乱序数组\n  const [data, setData] = useState([]); // [[2, 3, 6], [1, 4, 9], [5, 7, 8]]\n  // 用户选择的顺序\n  const [answer, setAnswer] = useState([]);\n  const [time_show, setTimeShow] = useState(true);\n  // Modal 显隐\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    // 获取所有游戏记录\n    db.getRecords().then(recordss => {\n      setRecordsDom(recordss);\n      console.log(\"数据库记录:\", recordss);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"createData执行了\");\n    setTotal(row * col);\n    createData();\n    // eslint-disable-next-line\n  }, [row, col]); // 当row或col变化时重新生成数据\n\n  // 生成元数据\n  function createData() {\n    // 创建col*row长度数组并打乱顺序\n    const all = shuffle(generateArray(col * row));\n    // 处理为二维数组[[2,3,6],[1,4,9],[5,7,8]]\n    const arr = [];\n    for (let r = 0; r < row; r++) {\n      arr.push(all.slice(col * r, col * (r + 1)));\n    }\n    setData(arr);\n  }\n\n  // 行输入框change\n  function handleRowChange(e) {\n    const value = e;\n    console.log(value);\n    if (value) {\n      setRow(parseInt(value)); // 将输入框中的值转为整数并设置为行数\n    } else {\n      setRow(0); // 将输入框中的值转为整数并设置为列数\n    }\n  }\n\n  // 列输入框change\n  function handleColChange(e) {\n    const value = e;\n    if (value) {\n      setCol(parseInt(value)); // 将输入框中的值转为整数并设置为列数\n    } else {\n      setCol(0); // 将输入框中的值转为整数并设置为列数\n    }\n  }\n\n  // 生成数组\n  function generateArray(n) {\n    return Array.from({\n      length: n\n    }, (_, i) => {\n      return {\n        value: i + 1,\n        status: \"default\",\n        time: 0\n      };\n    });\n  }\n\n  // 洗牌算法，打乱数组顺序\n  function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  // 不显示时间的计时任务\n  const hideTimer = {\n    start() {\n      startTime = new Date().getTime();\n    },\n    end(params) {\n      endTime = new Date().getTime();\n      time = computeTime(startTime, endTime);\n      // this.saveRecord({...params, time})\n      this.saveIndexDB({\n        ...params,\n        time\n      });\n    },\n    saveRecord({\n      row,\n      col,\n      dataCopy,\n      time\n    }) {\n      const data = flatten(dataCopy).sort((a, b) => a.value - b.value);\n      const records = localStorage.getItem(\"dwj_game_records\");\n      let historyRecords = [];\n      const obj = {\n        guige: row + \"*\" + col,\n        startTime: data[0].time,\n        endTime: data[data.length - 1].time,\n        totalTime: time,\n        records: data\n      };\n      if (records) {\n        historyRecords = JSON.parse(records);\n        historyRecords.push(obj);\n      } else {\n        historyRecords = [obj];\n      }\n      setRecordsDom(historyRecords);\n      localStorage.setItem(\"dwj_game_records\", JSON.stringify(historyRecords));\n    },\n    async saveIndexDB({\n      row,\n      col,\n      dataCopy,\n      time\n    }) {\n      // 记录信息, 按照按钮的顺序排序 1, 2, 3, 4, ...\n      const data = flatten(dataCopy).sort((a, b) => a.value - b.value);\n      // 获取所有游戏记录\n      const historyRecords = await db.getRecords();\n      // 要存储的记录\n      const recordItem = {\n        guige: row + \"*\" + col,\n        startTime: data[0].time,\n        endTime: data[data.length - 1].time,\n        totalTime: time,\n        records: data\n      };\n      // 将这条记录存到数据库\n      db.addRecord(recordItem);\n      this.getRecords();\n      // 删除一条游戏记录\n      // await db.deleteRecord(1);\n    },\n\n    deleteRecord(value) {\n      // 通过索引找到主键\n      db.getRecordsByIndex({\n        index: \"startTime\",\n        value\n      }).then(async record => {\n        // 删除一条游戏记录\n        await db.deleteRecord(record.id);\n        // this获取不到,不知为何,只能直接调用hideTimer.getRecords()\n        await hideTimer.getRecords();\n      }).catch(err => {\n        console.log(err);\n        _Message.error(\"\" + err);\n      });\n    },\n    async getRecords() {\n      const allRecords = await db.getRecords();\n      console.log(allRecords);\n      // 重设历史记录列表数据\n      setRecordsDom(allRecords);\n    }\n  };\n\n  // 行组件\n  function RowItem({\n    cols,\n    rowIndex\n  }) {\n    // 按下事件\n    function handlerMouseDown({\n      value,\n      status\n    }, rowIndex, colIndex) {\n      if (status != \"default\") return; // 不加这句话会使得重复点击正确选项变得错误导致游戏无法继续\n      // 复制data的值(不修改state中的值)\n      const dataCopy = data.slice();\n      // 第一个按钮, 不需要多余操作\n      if (value == 1) {\n        // 记录开始时间(时间戳)\n        hideTimer.start();\n        // 设置顺序\n        setAnswer([value]);\n        dataCopy[rowIndex][colIndex].status = \"right\";\n        dataCopy[rowIndex][colIndex].time = new Date().getTime();\n      } else {\n        const last = answer[answer.length - 1];\n        if (last + 1 == value) {\n          // 点对了\n          setAnswer([...answer, value]);\n          dataCopy[rowIndex][colIndex].status = \"right\";\n          dataCopy[rowIndex][colIndex].time = new Date().getTime();\n          if (value == total) {\n            hideTimer.end({\n              row,\n              col,\n              dataCopy\n            });\n          }\n        } else {\n          // 点错了\n          dataCopy[rowIndex][colIndex].status = \"wrong\";\n        }\n      }\n      setData(dataCopy);\n    }\n    /***\r\n     * 鼠标抬起事件\r\n     * 如果当前按钮是错的,当鼠标抬起时,状态恢复为default\r\n     */\n    function handlerMouseUp({\n      status\n    }, rowIndex, colIndex) {\n      if (status != \"wrong\") return; // 只有选错的按钮才会执行下去, 减少消耗\n      // 复制data的值(不修改state中的值)\n      const dataCopy = data.slice();\n      // 恢复为默认\n      dataCopy[rowIndex][colIndex].status = \"default\";\n      // 重新设置data的值以触发重新渲染\n      setData(dataCopy);\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row-item\"\n    }, cols.map((i, colIndex) => /*#__PURE__*/React.createElement(\"button\", {\n      className: classnames([\"col-item\", {\n        \"right\": i.status == \"right\"\n      }, {\n        \"wrong\": i.status == \"wrong\"\n      }]),\n      key: i.value,\n      onMouseDown: () => {\n        handlerMouseDown(i, rowIndex, colIndex);\n      },\n      onTouchStart: () => {\n        handlerMouseDown(i, rowIndex, colIndex);\n      },\n      onMouseUp: () => {\n        handlerMouseUp(i, rowIndex, colIndex);\n      },\n      onTouchEnd: () => {\n        handlerMouseUp(i, rowIndex, colIndex);\n      }\n    }, i.value)));\n  }\n\n  // modal层显示内容\n  function ModalContent() {\n    if (visible) {\n      const haveRecords = recordsDom.length > 0;\n      if (haveRecords) {\n        return /*#__PURE__*/React.createElement(Collapse, {\n          data: recordsDom,\n          deleteHandler: hideTimer.deleteRecord\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(_Empty, {\n          description: \"\\u8FD8\\u6CA1\\u6709\\u6E38\\u620F\\u5386\\u53F2\\uFF01\"\n        });\n      }\n    }\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n  return /*#__PURE__*/React.createElement(_Card, null, /*#__PURE__*/React.createElement(_Space, {\n    size: \"large\"\n  }, /*#__PURE__*/React.createElement(_InputNumber, {\n    style: {\n      width: 160\n    },\n    mode: \"button\",\n    prefix: \"row\",\n    defaultValue: row,\n    min: 2,\n    precision: 0,\n    onChange: handleRowChange\n  }), /*#__PURE__*/React.createElement(_InputNumber, {\n    style: {\n      width: 160\n    },\n    mode: \"button\",\n    prefix: \"col\",\n    defaultValue: col,\n    min: 2,\n    precision: 0,\n    onChange: handleColChange\n  }), /*#__PURE__*/React.createElement(_Button, {\n    onClick: createData\n  }, \"\\u5F00 \\u59CB\"), /*#__PURE__*/React.createElement(_Space, null, /*#__PURE__*/React.createElement(_Button, {\n    onClick: () => {\n      setVisible(true);\n    }\n  }, \"\\u6E38\\u620F\\u5386\\u53F2\")), /*#__PURE__*/React.createElement(_Space, null, /*#__PURE__*/React.createElement(\"span\", null, \"\\u663E\\u793A\\u65F6\\u95F4: \"), /*#__PURE__*/React.createElement(_Switch, {\n    defaultChecked: true,\n    size: \"small\",\n    onChange: () => {\n      setTimeShow(!time_show);\n    }\n  }), time_show && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"time\"\n  }, \"\\u65F6\\u95F4: \", time || 0, \"s\\u2003\"))), /*#__PURE__*/React.createElement(_Typography, null, /*#__PURE__*/React.createElement(Title, {\n    heading: 6,\n    style: {\n      marginTop: \"20px\"\n    }\n  }, \"\\u6E38\\u620F\\u89C4\\u5219\"), /*#__PURE__*/React.createElement(Paragraph, null, \"\\u70B9\\u51FB\\u9875\\u9762\\u4E2D\\u7684 \", /*#__PURE__*/React.createElement(_Tag, {\n    bordered: true\n  }, \"\\u5F00 \\u59CB\"), \" \\u6309\\u94AE,\\u4F1A\\u751F\\u6210\\u4E00\\u5F20\\u65B0\\u7684\\u8868\\u683C, \\u5F53\\u4F60\\u5728\\u6309\\u94AE \", /*#__PURE__*/React.createElement(_Tag, {\n    bordered: true\n  }, \"1\"), \" \\u4E0A\\u6309\\u4E0B\\u9F20\\u6807\\u65F6, \\u6E38\\u620F\\u4F1A\\u81EA\\u52A8\\u5F00\\u59CB\\u8BA1\\u65F6, \\u76F4\\u5230\\u4F60\\u70B9\\u51FB\\u6700\\u540E\\u4E00\\u4E2A\\u6B63\\u786E\\u6309\\u94AE\\u8BA1\\u65F6\\u7ED3\\u675F\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    id: \"content__div\"\n  }, data.map((i, ind) => /*#__PURE__*/React.createElement(RowItem, {\n    cols: i,\n    rowIndex: ind,\n    key: ind\n  }))), /*#__PURE__*/React.createElement(_Modal, {\n    visible: visible,\n    alignCenter: false,\n    title: \"\\u6E38\\u620F\\u5386\\u53F2\",\n    style: {\n      top: 60,\n      width: \"60%\",\n      minWidth: 560\n    },\n    onOk: () => setVisible(false),\n    onCancel: () => setVisible(false)\n  }, /*#__PURE__*/React.createElement(ModalContent, null)));\n}"],"names":["timeFormat","date","dateTime","arguments","length","undefined","formatStr","timeSource","test","toString","trim","Date","Number","replace","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","key","_ref","RegExp","concat","exec","_ref2","_slicedToArray","ret","beginIndex","slice","computeTime","smallTime","bigTime","overTime","cha","_formatStr$split","split","_formatStr$split2","unit","bits","time","formatTime0_00","str","_arr$","_arr$2","arr","padEnd","GameRecordDB","dbName","storeName","_classCallCheck","this","db","_createClass","value","_open","_asyncToGenerator","_regeneratorRuntime","_callee","_this","_context","prev","next","abrupt","Promise","resolve","reject","request","window","indexedDB","open","onerror","event","console","error","target","onsuccess","result","onupgradeneeded","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","createIndex","unique","stop","apply","_addRecord","_callee2","record","_this2","_context2","transaction","objectStore","add","_x","_getRecords","_callee3","_this3","_context3","getAll","_deleteRecord","_callee4","id","_this4","_context4","delete","_x2","_getRecordsByIndex","_callee5","index","_this5","_context5","get","_x3","CollapseItem","_Collapse","Option","_Select","props","yuanshiData","data","forEach","item","toLocaleDateString","getTime","sortType","push","groupByDate","deleteRecord","deleteHandler","log","_useState","useState","_useState2","setData","dataCopy","Object","assign","_useState3","_useState4","activeCollapseItem","setActiveCollapseItem","options","name","_useState5","_useState6","activeOption","setActiveOption","CollapseNeiceng","IndexDB","fatherKey","React","lazyload","accordion","map","header","guige","startTime","totalTime","extra","_Button","type","status","shape","icon","_IconDelete","onClick","_List","size","dataSource","records","render","recordItem","recordItemIndex","_item$records","_item$records$","records_time","isUp","sort","a","b","sortByTimeAndGroupByDate","style","maxHeight","overflowY","defaultActiveKey","onChange","e","keys","idx","dateData","btn","_Space","placeholder","width","defaultValue","option","_IconSortAscending","_IconSortDescending","Title","_Typography","Paragraph","_Form","_TimePicker","endTime","flatten","i","Array","isArray","Demo","indexDB","row","setRow","col","setCol","total","setTotal","_useState7","_useState8","recordsDom","setRecordsDom","_useState9","_useState10","_useState11","_useState12","answer","setAnswer","_useState13","_useState14","time_show","setTimeShow","_useState15","_useState16","visible","setVisible","createData","n","all","j","Math","floor","random","shuffle","from","_","r","useEffect","getRecords","then","recordss","hideTimer","start","end","params","saveIndexDB","_objectSpread","saveRecord","localStorage","getItem","historyRecords","obj","JSON","parse","setItem","stringify","_ref3","sent","addRecord","getRecordsByIndex","_ref4","catch","err","_Message","allRecords","RowItem","_ref5","cols","rowIndex","handlerMouseDown","_ref6","colIndex","_toConsumableArray","handlerMouseUp","_ref7","className","classnames","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","ModalContent","Collapse","_Empty","description","_Card","_InputNumber","mode","prefix","min","precision","parseInt","_Switch","defaultChecked","heading","marginTop","_Tag","bordered","ind","_Modal","alignCenter","title","top","minWidth","onOk","onCancel"],"sourceRoot":""}